[{"E:\\Documents\\Work\\Firebase-react\\trial\\src\\index.tsx":"1","E:\\Documents\\Work\\Firebase-react\\trial\\src\\reportWebVitals.js":"2","E:\\Documents\\Work\\Firebase-react\\trial\\src\\App.tsx":"3","E:\\Documents\\Work\\Firebase-react\\trial\\src\\config.ts":"4","E:\\Documents\\Work\\Firebase-react\\trial\\src\\container\\Trial\\index.tsx":"5","E:\\Documents\\Work\\Firebase-react\\trial\\src\\constants\\category.ts":"6","E:\\Documents\\Work\\Firebase-react\\trial\\src\\hooks\\useInput.ts":"7","E:\\Documents\\Work\\Firebase-react\\trial\\src\\utils\\notifications.ts":"8","E:\\Documents\\Work\\Firebase-react\\trial\\src\\components\\table\\index.tsx":"9","E:\\Documents\\Work\\Firebase-react\\trial\\src\\container\\Moogle\\index.tsx":"10","E:\\Documents\\Work\\Firebase-react\\trial\\src\\actions\\characters\\index.ts":"11","E:\\Documents\\Work\\Firebase-react\\trial\\src\\constants\\characters.ts":"12","E:\\Documents\\Work\\Firebase-react\\trial\\src\\store.ts":"13","E:\\Documents\\Work\\Firebase-react\\trial\\src\\reducers\\root.ts":"14","E:\\Documents\\Work\\Firebase-react\\trial\\src\\reducers\\Characters\\index.ts":"15","E:\\Documents\\Work\\Firebase-react\\trial\\src\\utils\\setIn.ts":"16","E:\\Documents\\Work\\Firebase-react\\trial\\src\\components\\CharacterSection\\index.tsx":"17","E:\\Documents\\Work\\Firebase-react\\trial\\src\\components\\Search\\index.tsx":"18"},{"size":347,"mtime":1612092028985,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":720,"mtime":1612092085668,"results":"22","hashOfConfig":"20"},{"size":1164,"mtime":1610913356838,"results":"23","hashOfConfig":"20"},{"size":8723,"mtime":1612092028984,"results":"24","hashOfConfig":"20"},{"size":258,"mtime":1611319893418,"results":"25","hashOfConfig":"20"},{"size":528,"mtime":1611319893421,"results":"26","hashOfConfig":"20"},{"size":1997,"mtime":1611319893423,"results":"27","hashOfConfig":"20"},{"size":2553,"mtime":1612092028983,"results":"28","hashOfConfig":"20"},{"size":1333,"mtime":1612092068106,"results":"29","hashOfConfig":"20"},{"size":768,"mtime":1612092028980,"results":"30","hashOfConfig":"20"},{"size":59,"mtime":1612092028983,"results":"31","hashOfConfig":"20"},{"size":387,"mtime":1612092028987,"results":"32","hashOfConfig":"20"},{"size":203,"mtime":1612092028986,"results":"33","hashOfConfig":"20"},{"size":416,"mtime":1612092028986,"results":"34","hashOfConfig":"20"},{"size":255,"mtime":1612092028987,"results":"35","hashOfConfig":"20"},{"size":2610,"mtime":1612092028982,"results":"36","hashOfConfig":"20"},{"size":834,"mtime":1612092028982,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1vg36rb",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"E:\\Documents\\Work\\Firebase-react\\trial\\src\\index.tsx",[],["80","81"],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\reportWebVitals.js",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\App.tsx",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\config.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\container\\Trial\\index.tsx",["82","83"],"import \"./index.scss\";\r\nimport * as React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  Form,\r\n  Grid,\r\n  Modal,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\nimport { categoryList } from \"../../constants/category\";\r\nimport ProductSearch from \"../../components/ProductSearch/productSearch\";\r\nimport SortableTable from \"../../components/table\";\r\nimport { errorMessage, success } from \"../../utils/notifications\";\r\n\r\nfunction Trial() {\r\n  const db = firebase.firestore();\r\n  const [products, setProducts] = React.useState([]);\r\n  const [productModal, openProductModal] = React.useState(false);\r\n  const [nameError, setNameError] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [productID, setProductID] = React.useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = React.useState([]);\r\n  const {\r\n    value: name,\r\n    bind: bindName,\r\n    reset: resetName,\r\n    setValue: setName,\r\n  } = useInput(\"\");\r\n  const {\r\n    value: price,\r\n    bind: bindPrice,\r\n    reset: resetPrice,\r\n    setValue: setPrice,\r\n  } = useInput(\"\");\r\n\r\n  const [selectedCategory, setSelectedCategory] = React.useState({\r\n    name: `Processor`,\r\n    dataKey: \"processor\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    handleSearchProduct(\"\");\r\n  }, [products]);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const data: any = await db.collection(\"products\").get();\r\n    setProducts(data.docs.map((doc: any) => doc.data()));\r\n    resetFields();\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    openProductModal(true);\r\n  };\r\n\r\n  const nameExist = () => {\r\n    const exist =\r\n      products.findIndex((product: any) => product.name === name) !== -1;\r\n    return exist;\r\n  };\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n    if (productID === \"\" && nameExist()) {\r\n      setNameError(true);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const newId = productID === \"\" ? uuidv4() : productID;\r\n    db.collection(\"products\")\r\n      .doc(newId)\r\n      .set({\r\n        id: newId,\r\n        name: name,\r\n        price: price,\r\n        category: selectedCategory.name,\r\n      })\r\n      .then(function () {\r\n        success(\r\n          `${\r\n            productID === \"\"\r\n              ? \"Product successfully created!\"\r\n              : \"Product successfully updated!\"\r\n          }`\r\n        );\r\n        openProductModal(false);\r\n        fetchData();\r\n      })\r\n      .catch(function (error) {\r\n        errorMessage(`Action Failed!`);\r\n        openProductModal(false);\r\n        fetchData();\r\n      });\r\n  };\r\n\r\n  const resetFields = () => {\r\n    setProductID(\"\");\r\n    resetName();\r\n    resetPrice();\r\n    setSelectedCategory({\r\n      name: `Processor`,\r\n      dataKey: \"processor\",\r\n    });\r\n  };\r\n\r\n  const getProductData = (id: string) => {\r\n    const currentProduct: any = products.find(\r\n      (product: any) => product.id === id\r\n    );\r\n    const category: any = categoryList.find(\r\n      (item: any) => item.name === currentProduct.category\r\n    );\r\n    setName(currentProduct.name);\r\n    setPrice(currentProduct.price);\r\n    setSelectedCategory(category);\r\n    setProductID(id);\r\n  };\r\n\r\n  const closeProductModal = () => {\r\n    resetFields();\r\n    openProductModal(false);\r\n  };\r\n\r\n  const deleteProduct = (id: string) => {\r\n    setLoading(true);\r\n    db.collection(\"products\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(function () {\r\n        fetchData();\r\n        handleSearchProduct(\"\");\r\n        success(`Product Successfully Deleted!`);\r\n      })\r\n      .catch(function (error) {\r\n        errorMessage(\"Action Failed\");\r\n        fetchData();\r\n        handleSearchProduct(\"\");\r\n      });\r\n  };\r\n\r\n  const handleSearchProduct = (name: string) => {\r\n    searchFilteredProduct(name);\r\n  };\r\n\r\n  const handleFilteredProducts = (products: any) =>\r\n    setFilteredProducts((state) => (state = products));\r\n\r\n  const searchFilteredProduct = async (name: string) => {\r\n    setLoading(true);\r\n    const searchValue = name ? name : \"\";\r\n    const filteredProducts: any = await _.filter(products, (product: any) => {\r\n      return (\r\n        product.name.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\r\n      );\r\n    });\r\n    handleFilteredProducts(filteredProducts);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"trial\">\r\n      <h1 className=\"trial-header\">Trial Cell 5</h1>\r\n      <div className=\"trial__options\">\r\n        <ProductSearch searchValue={\"\"} setSearchValue={handleSearchProduct} />\r\n        <>\r\n          <Modal\r\n            size={\"tiny\"}\r\n            open={productModal || productID !== \"\"}\r\n            onClose={() => {\r\n              closeProductModal();\r\n            }}\r\n            onOpen={() => {\r\n              openProductModal(true);\r\n            }}\r\n            closeIcon={true}\r\n            className=\"product-modal\"\r\n            trigger={\r\n              <Button\r\n                primary={true}\r\n                className=\"product-btn\"\r\n                onClick={handleAddProduct}\r\n              >\r\n                Add New Product\r\n              </Button>\r\n            }\r\n          >\r\n            <Modal.Header className=\"product-modal__header\">\r\n              {productID === \"\" ? \"Add New Product\" : \"Update Product\"}\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n              <Grid.Row columns={1} className=\"product-modal__content\">\r\n                <Form className=\"product-modal__form\" onSubmit={handleSubmit}>\r\n                  <Form.Input\r\n                    size=\"large\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    {...bindName}\r\n                    required\r\n                    error={\r\n                      nameError\r\n                        ? { content: \"Product Name already exist!\" }\r\n                        : false\r\n                    }\r\n                  />\r\n                  <Form.Group className=\"product-modal__group\">\r\n                    <Form.Field\r\n                      className=\"product-modal__group__category\"\r\n                      size=\"large\"\r\n                    >\r\n                      <label htmlFor=\"Category\">Category</label>\r\n                      <Dropdown\r\n                        id=\"Category\"\r\n                        className=\"selection\"\r\n                        openOnFocus\r\n                        trigger={\r\n                          <span className=\"category-label\">\r\n                            {selectedCategory.name}\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <Dropdown.Menu>\r\n                          {categoryList.map((option, key) => {\r\n                            return (\r\n                              <Dropdown.Item\r\n                                key={key}\r\n                                text={option.name}\r\n                                value={option.dataKey}\r\n                                onClick={() => {\r\n                                  setSelectedCategory(option);\r\n                                }}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </Form.Field>\r\n                    <Form.Input\r\n                      className=\"product-modal__group__price\"\r\n                      size=\"large\"\r\n                      label=\"Price\"\r\n                      type=\"Number\"\r\n                      placeholder=\"Product Price\"\r\n                      {...bindPrice}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Field\r\n                    size=\"large\"\r\n                    className=\"signup-container__form__signup\"\r\n                    control={Button}\r\n                    primary={true}\r\n                    value=\"Submit\"\r\n                  >\r\n                    {productID === \"\" ? \"Add\" : \"Update\"}\r\n                  </Form.Field>\r\n                </Form>\r\n              </Grid.Row>\r\n            </Modal.Content>\r\n          </Modal>\r\n        </>\r\n      </div>\r\n      {_.isEmpty(filteredProducts) ? (\r\n        <h1> Empty Data</h1>\r\n      ) : loading ? (\r\n        <h1>loading</h1>\r\n      ) : (\r\n        <SortableTable\r\n          products={filteredProducts}\r\n          getProductData={getProductData}\r\n          deleteProduct={deleteProduct}\r\n        />\r\n      )}\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default Trial;\r\n","E:\\Documents\\Work\\Firebase-react\\trial\\src\\constants\\category.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\hooks\\useInput.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\utils\\notifications.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\components\\table\\index.tsx",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\container\\Moogle\\index.tsx",["84","85"],"import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport get from \"lodash/get\";\r\nimport \"./index.scss\";\r\nimport _ from \"lodash\";\r\nimport Search from \"../../components/Search\";\r\nimport {\r\n  fetchCharactersData,\r\n  setCharacterData,\r\n} from \"../../actions/characters\";\r\nimport { useEffect } from \"react\";\r\nimport CharacterSection from \"../../components/CharacterSection\";\r\n\r\ninterface MoogleProps {\r\n  charData: any;\r\n  getCharactersData: (name: string) => void;\r\n  setData: (data: any) => void;\r\n}\r\n\r\nconst Moogle = (props: MoogleProps) => {\r\n  const { charData } = props;\r\n\r\n  const handleSearchProduct = (name: string) => {\r\n    const { getCharactersData, setData } = props;\r\n    if (name.trim() === \"\") {\r\n      setData([]);\r\n    } else {\r\n      getCharactersData(name);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"moogle-container\">\r\n      <Search setSearchValue={handleSearchProduct} type={\"Character\"} />\r\n      <CharacterSection charData={charData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: {}) => ({\r\n  charData: get(state, \"character.charData\"),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getCharactersData: (search: string) => fetchCharactersData(search),\r\n  setData: (data: any) => setCharacterData(data),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Moogle);\r\n","E:\\Documents\\Work\\Firebase-react\\trial\\src\\actions\\characters\\index.ts",["86","87"],"import Axios from \"axios\";\r\nimport { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { SET_CHARACTERS_DATA } from \"../../constants/characters\";\r\nimport { errorMessage } from \"../../utils/notifications\";\r\n\r\nexport const setCharacterData = (data: any) => ({\r\n  type: SET_CHARACTERS_DATA,\r\n  payload: data,\r\n});\r\n\r\nexport const fetchCharactersData = (search: string) => (dispatch: any) => {\r\n  return Axios.get(\r\n    `https://www.moogleapi.com/api/v1/characters/search?name=${search}`\r\n  )\r\n    .then((response) => {\r\n      dispatch(setCharacterData(response.data));\r\n    })\r\n    .catch((err) => {\r\n      // display error\r\n      if (err.response && err.response.status === 404) {\r\n        errorMessage(\"No result\");\r\n      }\r\n    });\r\n};\r\n","E:\\Documents\\Work\\Firebase-react\\trial\\src\\constants\\characters.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\store.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\reducers\\root.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\reducers\\Characters\\index.ts",["88"],"import { AnyAction } from \"redux\";\r\nimport { SET_CHARACTERS_DATA } from \"../../constants/characters\";\r\nimport { setIn } from \"../../utils/setIn\";\r\n\r\nconst initialState = {\r\n  charData: [],\r\n};\r\n\r\nexport default (state = initialState, action: AnyAction) => {\r\n  switch (action.type) {\r\n    case SET_CHARACTERS_DATA:\r\n      return setIn(state, \"charData\", action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\Documents\\Work\\Firebase-react\\trial\\src\\utils\\setIn.ts",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\components\\CharacterSection\\index.tsx",[],"E:\\Documents\\Work\\Firebase-react\\trial\\src\\components\\Search\\index.tsx",["89"],"import React, { useEffect } from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport \"./index.scss\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\n\r\nconst Search = (props: any) => {\r\n  const { setSearchValue, type} = props;\r\n  const {\r\n    value: data,\r\n    bind: bindSearch, \r\n  } = useInput('');\r\n \r\n\r\n  return (\r\n    <Input\r\n      className={\r\n        _.isEmpty(data)\r\n          ? \"search\"\r\n          : \"search--active \"\r\n      }\r\n      action={{\r\n        icon: \"search\",\r\n        onClick: () => {\r\n          setSearchValue(data);\r\n        },\r\n      }}\r\n      onKeyUp={(e: any) => {\r\n        if (e.key === \"Enter\") {\r\n          setSearchValue(e.target.value);\r\n        }\r\n      }}\r\n      {...bindSearch}\r\n      placeholder={`Search ${type} Name`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":49,"column":6,"nodeType":"96","endLine":49,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":53,"column":6,"nodeType":"96","endLine":53,"endColumn":16,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":9},{"ruleId":"100","severity":1,"message":"104","line":11,"column":10,"nodeType":"102","messageId":"103","endLine":11,"endColumn":19},{"ruleId":"100","severity":1,"message":"105","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":19},{"ruleId":"100","severity":1,"message":"106","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":9,"column":1,"nodeType":"109","endLine":16,"endColumn":3},{"ruleId":"100","severity":1,"message":"104","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook React.useEffect has a missing dependency: 'handleSearchProduct'. Either include it or remove the dependency array.",["113"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'AnyAction' is defined but never used.","'ThunkDispatch' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [fetchData]",{"range":"118","text":"119"},"Update the dependencies array to be: [handleSearchProduct, products]",{"range":"120","text":"121"},[1421,1423],"[fetchData]",[1491,1501],"[handleSearchProduct, products]"]